name: Build and Trivy Security Scan

on:
  push:
    branches: [ 'main' ]
    paths:
      - 'result/**'
      - '.github/workflows/trivy-security-scan-build-result.yaml'
  pull_request:
    branches: [ 'main' ]
    paths:
      - 'result/**'
      - '.github/workflows/trivy-security-scan-build-result.yaml'
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    
    steps:
      # Checkout code
      - uses: actions/checkout@v3
      
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # Build image but don't push yet
      - name: Build image for testing
        uses: docker/build-push-action@v4
        with:
          context: result
          load: true  # Load the image locally instead of pushing
          tags: result:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Run Trivy vulnerability scanner on the built image
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'result:test'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      
      # Only if Trivy scan passes, login to registries
      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Build and push the final image
      - name: Build and push
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: result
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            giuliogchillipharm/example-voting-app-result:latest
            giuliogchillipharm/example-voting-app-result:${{ github.sha }}
          cache-from: type=gha
      
      # Notify on failure or success
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.issue.number;
            if (issue_number) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: '‚ùå Security scan failed! Trivy found vulnerabilities that need to be fixed before merging.'
              });
            }